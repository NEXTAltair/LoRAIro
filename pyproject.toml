[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "lorairo"
version = "0.0.8"
description = "AIタグ付LoRA画像データセット準備ツール"
readme = "README.md"
requires-python = ">=3.12,<3.13"
license = { text = "MIT" }
authors = [{ name = "NEXTAltair" }]
keywords = ["lora", "dataset", "ai", "image-processing"]

classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: GPU :: NVIDIA CUDA",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Multimedia :: Graphics",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
]

dependencies = [
    # 画像処理系
    "Pillow",
    "opencv-python",
    "numpy",
    "scipy",
    "torch",
    "ImageHash",
    "spandrel",
    # AI系
    "openai>=0.10.0",
    # データ処理系
    "toml>=0.10.2",
    "loguru>=0.7.2",
    "sqlalchemy>=2.0.40",
    "alembic>=1.15.2",
    # GUI系
    "PySide6>=6.8.0.2",
    "superqt>=0.6.7",
    # Local packages (managed by uv.sources)
    "genai-tag-db-tools",
    "image-annotator-lib",
    "rembg>=2.0.67",
]


[project.scripts]
lorairo = "lorairo.main:main"
lorairo-docs = "sphinx.cmd.build:build_main"

[project.urls]
"Homepage" = "https://github.com/NEXTAltair/lorairo"
"Bug Tracker" = "https://github.com/NEXTAltair/lorairo/issues"

[tool.ruff]
fix = true
line-length = 108
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "RUF", # Ruff-specific rules
]

exclude = [
    "*/gui/designer/*", # Qtデザイナが生成するコード
    "*/__pycache__",
]

ignore = [
    "RUF001",
    "RUF003",
    "RUF002", # カタカナの `ノ` でのメッセージを無視
    "E501",   # Line too long (line-lengthで制御)
    "F401",   # Unused imports (IDEでの管理が困難なため)
]
fixable = ["ALL"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
strict = true
python_version = "3.12"
ignore_missing_imports = true
exclude = ["src/lorairo/gui/designer/"]

[tool.pytest.ini_options]
pythonpath = [
    "src",
    "local_packages/image-annotator-lib/src",
    "local_packages/genai-tag-db-tools/src",
] # テストするコードのディレクトリ
testpaths = [
    "tests",
    "local_packages/image-annotator-lib/tests",
    "local_packages/genai-tag-db-tools/tests",
]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "-s",
    "-ra",
    "--tb=short",
    "--showlocals",
    "--cov=src",
    "--cov-report=xml",
]
qt_api = "pyside6"
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "fast_integration: Fast integration tests",
    "gui: GUIアクセスを含むが表示を必要としないテスト",
    "gui_show: 実際のウィンドウ表示や描画を伴うテスト",
    "slow: Tests that take more time",
    "webapi: Tests related to Web API based annotators",
    "scorer: Tests specific to scorer models",
    "tagger: Tests specific to tagger models",
    "model_factory: Tests for the model factory (ModelLoad)",
    "fast: Fast unit tests (no external dependencies, <30s)",
    "standard: Standard unit tests (light mocking, <3min)",
    "real_api: Real API tests (for validation)",
]

# VS Code settings moved to lorairo.code-workspace


[tool.coverage.run]
source = ["src"]
omit = [
    "*/shibokensupport/*",
    "*/site-packages/*",
    "*/gui/designer/*",
    "*/tests/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
fail_under = 75 # カバレッジが75%未満なら失敗
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "if __name__ == .__main__.:",
    "@(abc\\.)?abstractmethod",
    "\\.\\.\\.",                  # ... (Ellipsis)
]


[tool.hatch.build.targets.wheel]
packages = ["src/lorairo"] # パッケージディレクトリ指定


[tool.uv.sources]
genai-tag-db-tools = { path = "local_packages/genai-tag-db-tools", editable = true }
image-annotator-lib = { path = "local_packages/image-annotator-lib", editable = true }

[dependency-groups]
dev = [
    "ruff",
    "mypy",
    "pytest",
    "pytest-cov",
    "pytest-qt",
    "pytest-bdd",
    "pytest-timeout>=2.4.0",
    "types-requests",
    "pytest-bdd>=8.1.0",
    "types-requests>=2.32.0",
    "types-Pillow",
    "types-toml",
    "psutil",
    "matplotlib",
]

[tool.hatch.metadata]
allow-direct-references = true
