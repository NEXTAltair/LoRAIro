"""Migrate schema from 20241023 backup to latest

Revision ID: 879cc87e4125
Revises:
Create Date: 2025-04-15 23:33:29.041000

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "879cc87e4125"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "ratings",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("image_id", sa.Integer(), nullable=False),
        sa.Column("model_id", sa.Integer(), nullable=False),
        sa.Column("raw_rating_value", sa.String(), nullable=False),
        sa.Column("normalized_rating", sa.String(), nullable=False),
        sa.Column("confidence_score", sa.Float(), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["image_id"], ["images.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["model_id"], ["models.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("ratings", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_ratings_image_id"), ["image_id"], unique=False)

    with op.batch_alter_table("captions", schema=None) as batch_op:
        batch_op.add_column(sa.Column("is_edited_manually", sa.Boolean(), nullable=True))
        batch_op.alter_column("id", existing_type=sa.INTEGER(), nullable=False, autoincrement=True)
        batch_op.alter_column(
            "caption", existing_type=sa.TEXT(), type_=sa.String(), existing_nullable=False
        )
        batch_op.alter_column(
            "created_at",
            existing_type=sa.TIMESTAMP(),
            nullable=False,
        )
        batch_op.alter_column(
            "updated_at",
            existing_type=sa.TIMESTAMP(),
            nullable=False,
        )
        batch_op.drop_index("idx_captions_image_id")
        batch_op.create_index(batch_op.f("ix_captions_image_id"), ["image_id"], unique=False)

    with op.batch_alter_table("images", schema=None) as batch_op:
        batch_op.add_column(sa.Column("manual_rating", sa.String(), nullable=True))
        batch_op.alter_column("id", existing_type=sa.INTEGER(), nullable=False, autoincrement=True)
        batch_op.alter_column("uuid", existing_type=sa.TEXT(), type_=sa.String(), existing_nullable=False)
        batch_op.alter_column("phash", existing_type=sa.TEXT(), type_=sa.String(), nullable=False)
        batch_op.alter_column(
            "original_image_path", existing_type=sa.TEXT(), type_=sa.String(), existing_nullable=False
        )
        batch_op.alter_column(
            "stored_image_path", existing_type=sa.TEXT(), type_=sa.String(), existing_nullable=False
        )
        batch_op.alter_column("format", existing_type=sa.TEXT(), type_=sa.String(), existing_nullable=False)
        batch_op.alter_column("mode", existing_type=sa.TEXT(), type_=sa.String(), existing_nullable=True)
        batch_op.alter_column(
            "filename", existing_type=sa.TEXT(), type_=sa.String(), existing_nullable=True
        )
        batch_op.alter_column(
            "extension", existing_type=sa.TEXT(), type_=sa.String(), existing_nullable=False
        )
        batch_op.alter_column(
            "color_space", existing_type=sa.TEXT(), type_=sa.String(), existing_nullable=True
        )
        batch_op.alter_column(
            "icc_profile", existing_type=sa.TEXT(), type_=sa.String(), existing_nullable=True
        )
        batch_op.alter_column(
            "created_at",
            existing_type=sa.TIMESTAMP(),
            nullable=False,
        )
        batch_op.alter_column(
            "updated_at",
            existing_type=sa.TIMESTAMP(),
            nullable=False,
        )
        batch_op.drop_index("idx_images_phash")
        batch_op.drop_index("idx_images_uuid")
        batch_op.create_index(batch_op.f("ix_images_phash"), ["phash"], unique=False)
        batch_op.create_index(batch_op.f("ix_images_uuid"), ["uuid"], unique=True)
        batch_op.create_unique_constraint("uix_uuid_phash", ["uuid", "phash"])

    with op.batch_alter_table("models", schema=None) as batch_op:
        batch_op.alter_column("id", existing_type=sa.INTEGER(), nullable=False, autoincrement=True)
        batch_op.alter_column("name", existing_type=sa.TEXT(), type_=sa.String(), existing_nullable=False)
        batch_op.alter_column("type", existing_type=sa.TEXT(), type_=sa.String(), existing_nullable=False)
        batch_op.alter_column(
            "provider", existing_type=sa.TEXT(), type_=sa.String(), existing_nullable=True
        )
        batch_op.alter_column(
            "created_at",
            existing_type=sa.TIMESTAMP(),
            nullable=False,
        )
        batch_op.alter_column(
            "updated_at",
            existing_type=sa.TIMESTAMP(),
            nullable=False,
        )

    with op.batch_alter_table("processed_images", schema=None) as batch_op:
        batch_op.alter_column("id", existing_type=sa.INTEGER(), nullable=False, autoincrement=True)
        batch_op.alter_column(
            "stored_image_path", existing_type=sa.TEXT(), type_=sa.String(), existing_nullable=False
        )
        batch_op.alter_column("mode", existing_type=sa.TEXT(), type_=sa.String(), existing_nullable=True)
        batch_op.alter_column(
            "filename", existing_type=sa.TEXT(), type_=sa.String(), existing_nullable=True
        )
        batch_op.alter_column(
            "color_space", existing_type=sa.TEXT(), type_=sa.String(), existing_nullable=True
        )
        batch_op.alter_column(
            "icc_profile", existing_type=sa.TEXT(), type_=sa.String(), existing_nullable=True
        )
        batch_op.alter_column(
            "created_at",
            existing_type=sa.TIMESTAMP(),
            nullable=False,
        )
        batch_op.alter_column(
            "updated_at",
            existing_type=sa.TIMESTAMP(),
            nullable=False,
        )
        batch_op.drop_index("idx_processed_images_image_id")
        batch_op.create_index(batch_op.f("ix_processed_images_image_id"), ["image_id"], unique=False)
        batch_op.create_unique_constraint(
            "uix_proc_img_dims_name", ["image_id", "width", "height", "filename"]
        )

    with op.batch_alter_table("scores", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("is_edited_manually", sa.Boolean(), nullable=False, server_default=sa.text("0"))
        )
        batch_op.alter_column("id", existing_type=sa.INTEGER(), nullable=False, autoincrement=True)
        batch_op.alter_column(
            "created_at",
            existing_type=sa.TIMESTAMP(),
            nullable=False,
        )
        batch_op.alter_column(
            "updated_at",
            existing_type=sa.TIMESTAMP(),
            nullable=False,
        )
        batch_op.drop_index("idx_scores_image_id")
        batch_op.create_index(batch_op.f("ix_scores_image_id"), ["image_id"], unique=False)

    with op.batch_alter_table("tags", schema=None) as batch_op:
        batch_op.add_column(sa.Column("is_edited_manually", sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column("confidence_score", sa.Float(), nullable=True))
        batch_op.alter_column("id", existing_type=sa.INTEGER(), nullable=False, autoincrement=True)
        batch_op.alter_column("tag", existing_type=sa.TEXT(), type_=sa.String(), existing_nullable=False)
        batch_op.alter_column(
            "created_at",
            existing_type=sa.TIMESTAMP(),
            nullable=False,
        )
        batch_op.alter_column(
            "updated_at",
            existing_type=sa.TIMESTAMP(),
            nullable=False,
        )
        batch_op.drop_index("idx_tags_image_id")
        batch_op.create_index(batch_op.f("ix_tags_image_id"), ["image_id"], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("tags", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_tags_image_id"))
        batch_op.create_index("idx_tags_image_id", ["image_id"], unique=False)
        batch_op.alter_column("updated_at", existing_type=sa.TIMESTAMP(), nullable=True)
        batch_op.alter_column("created_at", existing_type=sa.TIMESTAMP(), nullable=True)
        batch_op.alter_column("tag", existing_type=sa.String(), type_=sa.TEXT(), existing_nullable=False)
        batch_op.alter_column("id", existing_type=sa.INTEGER(), nullable=True, autoincrement=True)
        batch_op.drop_column("confidence_score")
        batch_op.drop_column("is_edited_manually")

    with op.batch_alter_table("scores", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_scores_image_id"))
        batch_op.create_index("idx_scores_image_id", ["image_id"], unique=False)
        batch_op.alter_column("updated_at", existing_type=sa.TIMESTAMP(), nullable=True)
        batch_op.alter_column("created_at", existing_type=sa.TIMESTAMP(), nullable=True)
        batch_op.alter_column("id", existing_type=sa.INTEGER(), nullable=True, autoincrement=True)
        batch_op.drop_column("is_edited_manually")

    with op.batch_alter_table("processed_images", schema=None) as batch_op:
        batch_op.drop_constraint("uix_proc_img_dims_name", type_="unique")
        batch_op.drop_index(batch_op.f("ix_processed_images_image_id"))
        batch_op.create_index("idx_processed_images_image_id", ["image_id"], unique=False)
        batch_op.alter_column("updated_at", existing_type=sa.TIMESTAMP(), nullable=True)
        batch_op.alter_column("created_at", existing_type=sa.TIMESTAMP(), nullable=True)
        batch_op.alter_column(
            "icc_profile", existing_type=sa.String(), type_=sa.TEXT(), existing_nullable=True
        )
        batch_op.alter_column(
            "color_space", existing_type=sa.String(), type_=sa.TEXT(), existing_nullable=True
        )
        batch_op.alter_column(
            "filename", existing_type=sa.String(), type_=sa.TEXT(), existing_nullable=True
        )
        batch_op.alter_column("mode", existing_type=sa.String(), type_=sa.TEXT(), existing_nullable=True)
        batch_op.alter_column(
            "stored_image_path", existing_type=sa.String(), type_=sa.TEXT(), existing_nullable=False
        )
        batch_op.alter_column("id", existing_type=sa.INTEGER(), nullable=True, autoincrement=True)
        batch_op.drop_column("manual_rating")

    with op.batch_alter_table("models", schema=None) as batch_op:
        batch_op.alter_column("updated_at", existing_type=sa.TIMESTAMP(), nullable=True)
        batch_op.alter_column("created_at", existing_type=sa.TIMESTAMP(), nullable=True)
        batch_op.alter_column(
            "provider", existing_type=sa.String(), type_=sa.TEXT(), existing_nullable=True
        )
        batch_op.alter_column("type", existing_type=sa.String(), type_=sa.TEXT(), existing_nullable=False)
        batch_op.alter_column("name", existing_type=sa.String(), type_=sa.TEXT(), existing_nullable=False)
        batch_op.alter_column("id", existing_type=sa.INTEGER(), nullable=True, autoincrement=True)

    with op.batch_alter_table("images", schema=None) as batch_op:
        batch_op.drop_constraint("uix_uuid_phash", type_="unique")
        batch_op.drop_index(batch_op.f("ix_images_uuid"))
        batch_op.drop_index(batch_op.f("ix_images_phash"))
        batch_op.create_index("idx_images_uuid", ["uuid"], unique=False)
        batch_op.create_index("idx_images_phash", ["phash"], unique=False)
        batch_op.alter_column("updated_at", existing_type=sa.TIMESTAMP(), nullable=True)
        batch_op.alter_column("created_at", existing_type=sa.TIMESTAMP(), nullable=True)
        batch_op.alter_column(
            "icc_profile", existing_type=sa.String(), type_=sa.TEXT(), existing_nullable=True
        )
        batch_op.alter_column(
            "color_space", existing_type=sa.String(), type_=sa.TEXT(), existing_nullable=True
        )
        batch_op.alter_column(
            "extension", existing_type=sa.String(), type_=sa.TEXT(), existing_nullable=False
        )
        batch_op.alter_column(
            "filename", existing_type=sa.String(), type_=sa.TEXT(), existing_nullable=True
        )
        batch_op.alter_column("mode", existing_type=sa.String(), type_=sa.TEXT(), existing_nullable=True)
        batch_op.alter_column("format", existing_type=sa.String(), type_=sa.TEXT(), existing_nullable=False)
        batch_op.alter_column(
            "stored_image_path", existing_type=sa.String(), type_=sa.TEXT(), existing_nullable=False
        )
        batch_op.alter_column(
            "original_image_path", existing_type=sa.String(), type_=sa.TEXT(), existing_nullable=False
        )
        batch_op.alter_column("phash", existing_type=sa.String(), type_=sa.TEXT(), nullable=True)
        batch_op.alter_column("uuid", existing_type=sa.String(), type_=sa.TEXT(), existing_nullable=False)
        batch_op.alter_column("id", existing_type=sa.INTEGER(), nullable=True, autoincrement=True)
        batch_op.drop_column("manual_rating")

    with op.batch_alter_table("captions", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_captions_image_id"))
        batch_op.create_index("idx_captions_image_id", ["image_id"], unique=False)
        batch_op.alter_column("updated_at", existing_type=sa.TIMESTAMP(), nullable=True)
        batch_op.alter_column("created_at", existing_type=sa.TIMESTAMP(), nullable=True)
        batch_op.alter_column(
            "caption", existing_type=sa.String(), type_=sa.TEXT(), existing_nullable=False
        )
        batch_op.alter_column("id", existing_type=sa.INTEGER(), nullable=True, autoincrement=True)
        batch_op.drop_column("is_edited_manually")

    with op.batch_alter_table("ratings", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_ratings_image_id"))

    op.drop_table("ratings")
    # ### end Alembic commands ###
